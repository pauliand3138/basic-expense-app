{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","style","paddingTop","map","item","id","ExpensesFilter","onChange","event","onChangeFilter","target","value","selected","ChartBar","barFillHeight","maxValue","Math","round","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","paddingBottom","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","enteredAmount","enteredDate","userInput","setUserInput","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","prevState","type","min","step","onClick","onCancel","NewExpense","isAddNewExpense","setIsAddNewExpense","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.87fd2028.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n    const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n    const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n    const classes = \"card \" + props.className;\r\n    return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst ExpenseItem = (props) => {\r\n    return (\r\n        <li>\r\n            <Card className=\"expense-item\">\r\n                <ExpenseDate date={props.date} />\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"expense-item__price\">RM {props.amount}</div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n    if (props.items.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>;\r\n    }\r\n\r\n    return (\r\n        <div style={{ paddingTop: \"2em\" }}>\r\n            <label className=\"expenses-list__label\">All Expenses</label>\r\n            <ul className=\"expenses-list\">\r\n                {props.items.map((item) => (\r\n                    <ExpenseItem\r\n                        key={item.id}\r\n                        title={item.title}\r\n                        amount={item.amount}\r\n                        date={item.date}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n    const dropdownChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"expenses-filter\">\r\n            <div className=\"expenses-filter__control\">\r\n                <label>Filter by year</label>\r\n                <select onChange={dropdownChangeHandler} value={props.selected}>\r\n                    <option value=\"2023\">2023</option>\r\n                    <option value=\"2022\">2022</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = \"0%\";\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div\r\n                    className=\"chart-bar__fill\"\r\n                    style={{ height: barFillHeight }}\r\n                ></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;\r\n","import ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(\r\n        (dataPoint) => dataPoint.value\r\n    );\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map((dataPoint) => (\r\n                <ChartBar\r\n                    key={dataPoint.label}\r\n                    value={dataPoint.value}\r\n                    maxValue={totalMaximum}\r\n                    label={dataPoint.label}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n    const chartDataPoints = [\r\n        { label: \"Jan\", value: 0 },\r\n        { label: \"Feb\", value: 0 },\r\n        { label: \"Mar\", value: 0 },\r\n        { label: \"Apr\", value: 0 },\r\n        { label: \"May\", value: 0 },\r\n        { label: \"Jun\", value: 0 },\r\n        { label: \"Jul\", value: 0 },\r\n        { label: \"Aug\", value: 0 },\r\n        { label: \"Sep\", value: 0 },\r\n        { label: \"Oct\", value: 0 },\r\n        { label: \"Nov\", value: 0 },\r\n        { label: \"Dec\", value: 0 },\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return (\r\n        <Chart dataPoints={chartDataPoints} style={{ paddingBottom: \"1em\" }} />\r\n    );\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import { useState } from \"react\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = (props) => {\r\n    const [filteredYear, setFilteredYear] = useState(\"2022\");\r\n\r\n    const filterChangedHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear);\r\n    };\r\n\r\n    const filteredExpenses = props.expenses.filter(\r\n        (expense) => expense.date.getFullYear().toString() === filteredYear\r\n    );\r\n\r\n    return (\r\n        <Card className=\"expenses\">\r\n            <ExpensesFilter\r\n                onChangeFilter={filterChangedHandler}\r\n                selected={filteredYear}\r\n            />\r\n            <ExpensesChart expenses={filteredExpenses} />\r\n            <ExpensesList items={filteredExpenses} />\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [userInput, setUserInput] = useState({\r\n        enteredTitle: \"\",\r\n        enteredAmount: \"\",\r\n        enteredDate: \"\",\r\n    });\r\n\r\n    const titleChangedHandler = (event) => {\r\n        setUserInput((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                enteredTitle: event.target.value,\r\n            };\r\n        });\r\n    };\r\n\r\n    const amountChangedHandler = (event) => {\r\n        setUserInput((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                enteredAmount: event.target.value,\r\n            };\r\n        });\r\n    };\r\n\r\n    const dateChangedHandler = (event) => {\r\n        setUserInput((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                enteredDate: event.target.value,\r\n            };\r\n        });\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: userInput.enteredTitle,\r\n            amount: +userInput.enteredAmount,\r\n            date: new Date(userInput.enteredDate),\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n\r\n        setUserInput((prevState) => {\r\n            return {\r\n                enteredTitle: \"\",\r\n                enteredAmount: \"\",\r\n                enteredDate: \"\",\r\n            };\r\n        });\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={userInput.enteredTitle}\r\n                        onChange={titleChangedHandler}\r\n                    />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        min=\"0.01\"\r\n                        step=\"0.01\"\r\n                        value={userInput.enteredAmount}\r\n                        onChange={amountChangedHandler}\r\n                    />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        min=\"2022-01-01\"\r\n                        value={userInput.enteredDate}\r\n                        onChange={dateChangedHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel}>\r\n                    Cancel\r\n                </button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import \"./NewExpense.css\";\r\nimport { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n    const [isAddNewExpense, setIsAddNewExpense] = useState(false);\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString(),\r\n        };\r\n\r\n        props.onAddExpense(expenseData);\r\n        setIsAddNewExpense(false);\r\n    };\r\n\r\n    const startAddingHandler = () => {\r\n        setIsAddNewExpense(true);\r\n    };\r\n\r\n    const stopAddingHandler = () => {\r\n        setIsAddNewExpense(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            {!isAddNewExpense && (\r\n                <button onClick={startAddingHandler}>Add New Expense</button>\r\n            )}\r\n            {isAddNewExpense && (\r\n                <ExpenseForm\r\n                    onSaveExpenseData={saveExpenseDataHandler}\r\n                    onCancel={stopAddingHandler}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n    {\n        id: \"e1\",\n        title: \"Groceries\",\n        amount: 94.12,\n        date: new Date(2022, 7, 14),\n    },\n    {\n        id: \"e2\",\n        title: \"Huawei Tablet\",\n        amount: 799.49,\n        date: new Date(2022, 2, 12),\n    },\n    {\n        id: \"e3\",\n        title: \"Health Insurance\",\n        amount: 294.67,\n        date: new Date(2022, 2, 28),\n    },\n    {\n        id: \"e4\",\n        title: \"Working Desk\",\n        amount: 450,\n        date: new Date(2022, 5, 12),\n    },\n];\n\nconst App = () => {\n    const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n    const addExpenseHandler = (expense) => {\n        setExpenses((prevState) => {\n            return [expense, ...prevState];\n        });\n    };\n\n    return (\n        <div className=\"main-body\">\n            <NewExpense onAddExpense={addExpenseHandler} />\n            <Expenses expenses={expenses} />\n        </div>\n    );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}